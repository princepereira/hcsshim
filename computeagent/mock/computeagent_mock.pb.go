// Code generated by MockGen. DO NOT EDIT.
// Source: computeagent.pb.go

// Package computeagent_mock is a generated GoMock package.
package computeagent_mock

import (
	context "context"
	reflect "reflect"

	computeagent "github.com/Microsoft/hcsshim/internal/computeagent"
	gomock "github.com/golang/mock/gomock"
)

// MockComputeAgentService is a mock of ComputeAgentService interface.
type MockComputeAgentService struct {
	ctrl     *gomock.Controller
	recorder *MockComputeAgentServiceMockRecorder
}

// MockComputeAgentServiceMockRecorder is the mock recorder for MockComputeAgentService.
type MockComputeAgentServiceMockRecorder struct {
	mock *MockComputeAgentService
}

// NewMockComputeAgentService creates a new mock instance.
func NewMockComputeAgentService(ctrl *gomock.Controller) *MockComputeAgentService {
	mock := &MockComputeAgentService{ctrl: ctrl}
	mock.recorder = &MockComputeAgentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComputeAgentService) EXPECT() *MockComputeAgentServiceMockRecorder {
	return m.recorder
}

// AddNIC mocks base method.
func (m *MockComputeAgentService) AddNIC(ctx context.Context, req *computeagent.AddNICInternalRequest) (*computeagent.AddNICInternalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNIC", ctx, req)
	ret0, _ := ret[0].(*computeagent.AddNICInternalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddNIC indicates an expected call of AddNIC.
func (mr *MockComputeAgentServiceMockRecorder) AddNIC(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNIC", reflect.TypeOf((*MockComputeAgentService)(nil).AddNIC), ctx, req)
}

// AssignPCI mocks base method.
func (m *MockComputeAgentService) AssignPCI(ctx context.Context, req *computeagent.AssignPCIInternalRequest) (*computeagent.AssignPCIInternalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssignPCI", ctx, req)
	ret0, _ := ret[0].(*computeagent.AssignPCIInternalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssignPCI indicates an expected call of AssignPCI.
func (mr *MockComputeAgentServiceMockRecorder) AssignPCI(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssignPCI", reflect.TypeOf((*MockComputeAgentService)(nil).AssignPCI), ctx, req)
}

// DeleteNIC mocks base method.
func (m *MockComputeAgentService) DeleteNIC(ctx context.Context, req *computeagent.DeleteNICInternalRequest) (*computeagent.DeleteNICInternalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNIC", ctx, req)
	ret0, _ := ret[0].(*computeagent.DeleteNICInternalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteNIC indicates an expected call of DeleteNIC.
func (mr *MockComputeAgentServiceMockRecorder) DeleteNIC(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNIC", reflect.TypeOf((*MockComputeAgentService)(nil).DeleteNIC), ctx, req)
}

// ModifyNIC mocks base method.
func (m *MockComputeAgentService) ModifyNIC(ctx context.Context, req *computeagent.ModifyNICInternalRequest) (*computeagent.ModifyNICInternalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ModifyNIC", ctx, req)
	ret0, _ := ret[0].(*computeagent.ModifyNICInternalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ModifyNIC indicates an expected call of ModifyNIC.
func (mr *MockComputeAgentServiceMockRecorder) ModifyNIC(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ModifyNIC", reflect.TypeOf((*MockComputeAgentService)(nil).ModifyNIC), ctx, req)
}

// RemovePCI mocks base method.
func (m *MockComputeAgentService) RemovePCI(ctx context.Context, req *computeagent.RemovePCIInternalRequest) (*computeagent.RemovePCIInternalResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemovePCI", ctx, req)
	ret0, _ := ret[0].(*computeagent.RemovePCIInternalResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RemovePCI indicates an expected call of RemovePCI.
func (mr *MockComputeAgentServiceMockRecorder) RemovePCI(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemovePCI", reflect.TypeOf((*MockComputeAgentService)(nil).RemovePCI), ctx, req)
}
